[gd_resource type="VisualShader" load_steps=19 format=3 uid="uid://cw06a6dejg1vr"]

[sub_resource type="VisualShaderNodeTextureParameterTriplanar" id="VisualShaderNodeTextureParameterTriplanar_0m383"]
parameter_name = "RockRoughnessTriplanar"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_u04x6"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_5nih3"]
input_name = "view_matrix"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fgckl"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_f7nny"]

[sub_resource type="VisualShaderNodeTransformFunc" id="VisualShaderNodeTransformFunc_xtxdu"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_1j107"]
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_jwm3v"]
default_input_values = [0, Vector3(0.5, 0.5, 0.5), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_xvl8e"]
parameter_name = "NormalMap"
texture_type = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_u76om"]
parameter_name = "DetailNormalPower"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_676kk"]
parameter_name = "NormalMapPower"
hint = 1
max = 5.0
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_pfl1f"]
parameter_name = "RoughnessMult"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_7hiv3"]
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_hg3xi"]
parameter_name = "RockTint"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_mpn0p"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_u281l"]
parameter_name = "TriPlanerScaleHard"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeTextureParameterTriplanar" id="VisualShaderNodeTextureParameterTriplanar_ucbqe"]
parameter_name = "RockAlbedoTriplanar"
texture_type = 1

[sub_resource type="VisualShaderNodeTextureParameterTriplanar" id="VisualShaderNodeTextureParameterTriplanar_5vqka"]
parameter_name = "RockNormalTriplanar"
texture_type = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D RockAlbedoTriplanar : source_color;
uniform vec4 RockTint : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform sampler2D RockRoughnessTriplanar;
uniform float RoughnessMult : hint_range(0, 1) = 1;
uniform sampler2D NormalMap : hint_normal;
uniform sampler2D RockNormalTriplanar : hint_normal;
uniform float DetailNormalPower : hint_range(0, 1) = 1;
uniform float NormalMapPower : hint_range(0, 5) = 1;


// TextureParameterTriplanar
	vec4 triplanar_texture(sampler2D p_sampler, vec3 p_weights, vec3 p_triplanar_pos) {
		vec4 samp = vec4(0.0);
		samp += texture(p_sampler, p_triplanar_pos.xy) * p_weights.z;
		samp += texture(p_sampler, p_triplanar_pos.xz) * p_weights.y;
		samp += texture(p_sampler, p_triplanar_pos.zy * vec2(-1.0, 1.0)) * p_weights.x;
		return samp;
	}

	uniform vec3 triplanar_scale = vec3(1.0, 1.0, 1.0);
	uniform vec3 triplanar_offset;
	uniform float triplanar_sharpness = 0.5;

	varying vec3 triplanar_power_normal;
	varying vec3 triplanar_pos;

void vertex() {
// TextureParameterTriplanar
	{
		triplanar_power_normal = pow(abs(NORMAL), vec3(triplanar_sharpness));
		triplanar_power_normal /= dot(triplanar_power_normal, vec3(1.0));
		triplanar_pos = VERTEX * triplanar_scale + triplanar_offset;
		triplanar_pos *= vec3(1.0, -1.0, 1.0);
	}
}

void fragment() {
// TextureParameterTriplanar:7
	vec4 n_out7p0 = triplanar_texture(RockAlbedoTriplanar, triplanar_power_normal, triplanar_pos);


// ColorParameter:34
	vec4 n_out34p0 = RockTint;


// VectorOp:35
	vec3 n_out35p0 = vec3(n_out7p0.xyz) * vec3(n_out34p0.xyz);


// TextureParameterTriplanar:11
	vec4 n_out11p0 = triplanar_texture(RockRoughnessTriplanar, triplanar_power_normal, triplanar_pos);


// FloatParameter:32
	float n_out32p0 = RoughnessMult;


// FloatOp:33
	float n_out33p0 = n_out11p0.x * n_out32p0;


	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(NormalMap, UV);


// TextureParameterTriplanar:9
	vec4 n_out9p0 = triplanar_texture(RockNormalTriplanar, triplanar_power_normal, triplanar_pos);


// FloatParameter:30
	float n_out30p0 = DetailNormalPower;


// Mix:29
	vec3 n_out29p0 = mix(vec3(n_out2p0.xyz), vec3(n_out9p0.xyz), vec3(n_out30p0));


// FloatParameter:31
	float n_out31p0 = NormalMapPower;


// Output:0
	ALBEDO = n_out35p0;
	ROUGHNESS = n_out33p0;
	NORMAL_MAP = n_out29p0;
	NORMAL_MAP_DEPTH = n_out31p0;


}
"
nodes/fragment/0/position = Vector2(1300, 40)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_u04x6")
nodes/fragment/2/position = Vector2(-440, 600)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_xvl8e")
nodes/fragment/3/position = Vector2(-780, 540)
nodes/fragment/7/node = SubResource("VisualShaderNodeTextureParameterTriplanar_ucbqe")
nodes/fragment/7/position = Vector2(-840, -1320)
nodes/fragment/9/node = SubResource("VisualShaderNodeTextureParameterTriplanar_5vqka")
nodes/fragment/9/position = Vector2(-840, -1020)
nodes/fragment/11/node = SubResource("VisualShaderNodeTextureParameterTriplanar_0m383")
nodes/fragment/11/position = Vector2(-840, -720)
nodes/fragment/23/node = SubResource("VisualShaderNodeInput_5nih3")
nodes/fragment/23/position = Vector2(-2680, -1220)
nodes/fragment/24/node = SubResource("VisualShaderNodeInput_fgckl")
nodes/fragment/24/position = Vector2(-2540, -940)
nodes/fragment/25/node = SubResource("VisualShaderNodeTransformVecMult_f7nny")
nodes/fragment/25/position = Vector2(-2080, -1100)
nodes/fragment/26/node = SubResource("VisualShaderNodeTransformFunc_xtxdu")
nodes/fragment/26/position = Vector2(-2340, -1160)
nodes/fragment/27/node = SubResource("VisualShaderNodeVectorOp_1j107")
nodes/fragment/27/position = Vector2(-1750.64, -1059.86)
nodes/fragment/29/node = SubResource("VisualShaderNodeMix_jwm3v")
nodes/fragment/29/position = Vector2(520, 260)
nodes/fragment/30/node = SubResource("VisualShaderNodeFloatParameter_u76om")
nodes/fragment/30/position = Vector2(-60, 260)
nodes/fragment/31/node = SubResource("VisualShaderNodeFloatParameter_676kk")
nodes/fragment/31/position = Vector2(580, 500)
nodes/fragment/32/node = SubResource("VisualShaderNodeFloatParameter_pfl1f")
nodes/fragment/32/position = Vector2(-680, -180)
nodes/fragment/33/node = SubResource("VisualShaderNodeFloatOp_7hiv3")
nodes/fragment/33/position = Vector2(-180, -80)
nodes/fragment/34/node = SubResource("VisualShaderNodeColorParameter_hg3xi")
nodes/fragment/34/position = Vector2(-300, -820)
nodes/fragment/35/node = SubResource("VisualShaderNodeVectorOp_mpn0p")
nodes/fragment/35/position = Vector2(80, -660)
nodes/fragment/36/node = SubResource("VisualShaderNodeFloatParameter_u281l")
nodes/fragment/36/position = Vector2(-1911.4, -891.537)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 2, 24, 0, 25, 1, 23, 0, 26, 0, 26, 0, 25, 0, 25, 0, 27, 0, 30, 0, 29, 2, 2, 0, 29, 0, 29, 0, 0, 9, 31, 0, 0, 10, 32, 0, 33, 1, 34, 0, 35, 1, 7, 0, 35, 0, 11, 0, 33, 0, 35, 0, 0, 0, 9, 0, 29, 1, 33, 0, 0, 3, 36, 0, 27, 1)
